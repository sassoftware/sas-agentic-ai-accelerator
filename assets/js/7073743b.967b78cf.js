"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[102],{4914:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Administration-Guide/Introduction","title":"Introduction","description":"The Administration Guide of the SAS Agentic AI Accelerator will walk you through the setup of this project.","source":"@site/docs/Administration-Guide/Introduction.md","sourceDirName":"Administration-Guide","slug":"/Administration-Guide/Introduction","permalink":"/sas-agentic-ai-accelerator/Administration-Guide/Introduction","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","previous":{"title":"SAS Agentic AI Accelerator","permalink":"/sas-agentic-ai-accelerator/"},"next":{"title":"Container-Registry","permalink":"/sas-agentic-ai-accelerator/Administration-Guide/Container-Registry"}}');var s=n(4848),o=n(8453);const a={sidebar_position:1},r=void 0,l={},c=[{value:"Setup",id:"setup",level:2},{value:"Python Setup",id:"python-setup",level:3},{value:"SAS Viya CLI Setup:",id:"sas-viya-cli-setup",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"The Administration Guide of the SAS Agentic AI Accelerator will walk you through the setup of this project."}),"\n",(0,s.jsx)(t.p,{children:"Setting everything up will require you to have the following permissions or someone that does:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Your user must be part of the SAS Administrators group."}),"\n",(0,s.jsx)(t.li,{children:"You have to have the right to do changes to the kubernetes cluster."}),"\n",(0,s.jsx)(t.li,{children:"You need the ability to setup a Docker compliant container registry."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(t.p,{children:"Please follow these steps, step by step - in order to complete this setup you need both the ability to create a new Repository in the SAS Model Manager (this requires SAS Administrators rights by default), be able to modify the SAS Viya deployment, be able to access a Container Registry and be able to deploy containers in Kubernetes - usually this setup requires both a SAS administrator and a Kubernetes administrator.\nIn order to be able to run this you will need access to a machine with the following tools available:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Python with the sasctl>=1.10.3, pandas>=2.1.3 & hugging-face packages installed"}),"\n",(0,s.jsx)(t.li,{children:"kubectl"}),"\n",(0,s.jsx)(t.li,{children:"SAS Viya CLI with the authorization, models and identities plugin installed"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"As a first step clone this repository to the machine and change into the directory:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# Clone the repository\ngit clone https://github.com/sassoftware/sas-agentic-ai-accelerator.git\n# Change into the directory\ncd sas-agentic-ai-accelerator\n"})}),"\n",(0,s.jsx)(t.h3,{id:"python-setup",children:"Python Setup"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# [Optional] Create a new Python environment\npython -m venv .venv\n# [Optional] Showcasing the activation on Windows, change accordingly\n.venv/Scripts/activate\n# Installing the required packages\npip install sasctl>=1.10.3 pandas>=2.1.3 huggingface-hub[cli]\n"})}),"\n",(0,s.jsx)(t.h3,{id:"sas-viya-cli-setup",children:"SAS Viya CLI Setup:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["Download the SAS Viya CLI from the SAS Support page for your operating system - ",(0,s.jsx)(t.a,{href:"https://support.sas.com/downloads/package.htm?pid=2512",children:"https://support.sas.com/downloads/package.htm?pid=2512"}),". Here is a link to the ",(0,s.jsx)(t.a,{href:"https://go.documentation.sas.com/doc/en/sasadmincdc/default/calcli/n01xwtcatlinzrn1gztsglukb34a.htm",children:"SAS Documentation"})," for the CLI."]}),"\n",(0,s.jsx)(t.li,{children:"Next we need to setup up a connection profile in order to be able to connect with your SAS Viya environment:"}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sas-viya profile init\n# Enter your SAS Viya host (service endpoint), select the output type (I recommend fulljson) and anble ANSI colored output (I recommend yes)\n# If successfull you should see a line like: Saved 'Default' profile to /path/.sas/config.json\n# Next we need to login just to confirm the connection\nsas-viya auth login loginCode\n# If successfull you shoud see a line like: Login succeeded. Token saved.\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"3",children:["\n",(0,s.jsxs)(t.li,{children:["Next we need to install a couple of plugins (authorization, identities & models) in order to set everything up correctly - if you want to learn more about the different plugins see the ",(0,s.jsx)(t.a,{href:"https://go.documentation.sas.com/doc/en/sasadmincdc/default/calcli/n1vth8mtb8ipprn1prz5j26p3nvc.htm",children:"SAS Documentation"}),":"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"# Installing the required plugins - even if you have setup the CLI before I recommend you do this to ensure the plugins are up to date\n# First up is the authorization plugin\nsas-viya plugins install -repo SAS authorization\n# Next we install the identities plugin\nsas-viya plugins install -repo SAS identities\n# And then the models plugin\nsas-viya plugins install -repo SAS models\n"})}),"\n",(0,s.jsxs)(t.ol,{start:"4",children:["\n",(0,s.jsx)(t.li,{children:"Now the CLI is ready and setup for you to continue on."}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);